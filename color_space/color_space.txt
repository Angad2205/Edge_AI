                                    NOTES
............................................................................                                    
                            HSV (HUE SATURATION CHANNEL)
............................................................................. 
In computer vision, HSV stands for Hue, Saturation, and Value, which are three components used to describe colors in a way that is more aligned with human perception than the RGB (Red, Green, Blue) color space.


Note - THE default way through which open cv read the image is through the BGR format where as if you use any other library then the format will be the inverse of the format used in open cv (RGB)

WE can not convert grayscace to HSV
............................................................................
                                 COLOR CHANNEL
............................................................................                                  
Images work with three channel of the color which is red blue and green 
using opencv function cv.split(img) you can split these colour channels 

merge = cv.merge([b,g,r])  # using this function we can get the orginal picture again by merging the three color channel      

.............................................................................
                                 COLOUR SPACE               
............................................................................
                                 # splitting the image in B G R COLOUR CHANNEL to test the intensity of each channel but it will be displayed in the grey scale format  

b,g,r = cv.split(img)
cv.imshow('blue' , b)
cv.imshow('green' , g)
cv.imshow('red' , r)

merge = cv.merge([b,g,r])  # using this function we can get the orginal picture again by merging the three color channel 
cv.imshow('merge' , merge)

# creating the blank channel of 500X500 pixel 
blank = np.zeros((img.shape[:2]) , dtype ='uint8') 
#here we are creating the image to show the different colour channel in the image by first creating the blank image and mixing the image using the different colour channel , we are taking only two values so that we only get the info about the height and width of the image not the info of colour channel 

blue = cv.merge([b , blank , blank])
green = cv.merge([blank , g , blank])
red = cv.merge([blank , blank , r])

cv.imshow('blue' , blue)
cv.imshow('green' , green)
cv.imshow('red' , red)

cv.waitKey(10000)

